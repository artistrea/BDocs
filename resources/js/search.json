[[{"i":"projeto-prático-de-bancos-de-dados-20232-documentação","l":"Projeto Prático de Bancos de Dados (2023.2) [Documentação]","p":["Tema: Sistema de Gerenciamento de Materiais para um Laboratório Didático","Documentação para o projeto de banco de dados da UnB","Essa documentação utiliza retype para gerar o site estático."]},{"l":"Link Para o Vídeo de Apresentação","p":["https://drive.google.com/file/d/1rtjihYzAl5Vrb8SFpmTu8qaa8OGhkySU/view?usp=sharing"]},{"l":"Grupo 08","p":["Artur Padoves - 211038208","Miguel Mendes - 211026501","Pedro Ximenes - 200026071","Samuel Carvalho - 211010388","Miguel Carvalho - 211068341"]},{"l":"Como rodar a documentação"},{"l":"Instalando o retype","p":["Basta ter o npm, que é instalado automaticamente com o node:","Então instalar o retype:","E então rodar o servidor de desenvolvimento:"]},{"l":"Editando o conteúdo","p":["Basta criar/editar os arquivos .md e o servidor local irá atualizar o site automaticamente. Quando o conteúdo for para a main, o site será atualizado automaticamente."]}],[{"l":"Primeira entrega","p":["Nessa primeira entrega, o objetivo é definir as ferramentas a serem usadas e documentar o setup necessário para o desenvolvimento do projeto."]},{"l":"Grupo 08","p":["Artur Padoves - 211038208","Miguel Mendes - 211026501","Pedro Ximenes - 200026071","Samuel Carvalho - 211010388","Miguel Carvalho - 211068341"]},{"l":"Decisões do projeto","p":["Frontend: Svelte;","Motivação: Super simples, fácil de aprender;","Backend: Flask;","Motivação: Interesse do grupo em aprender;","Banco de Dados: Postgres;","Motivação: Conhecido por parte da equipe, possuímos docker-compose.yml pronto para uso;","Prototipação: DBDiagram;","Motivação: Ferramenta simples e fácil de usar; fácil migrar para uma ferramenta CASE completa"]}],[{"l":"PostgreSQL","p":["Não é necessário instalar o PostgreSQL, pois ele será executado em um container Docker. Instale o Docker seguindo as instruções em primeira-entrega/docker.md."]},{"l":"Rodando o PostgreSQL"},{"l":"Iniciando o container","p":["Esteja na pasta que possui o docker-compose.yml e execute o comando abaixo para iniciar o container:","Esse comando inicia o container de acordo com o docker-compose.yml:"]},{"l":"Executando comandos no container","p":["É possível executar comandos no container, como psql. Para isso entramos no bash do container usando o comando docker exec:","E de dentro do terminal rodamos o comando psql:"]},{"l":"Testando se tudo está funcionando","p":["Usando o que foi visto até agora, podemos testar a conexão com o banco de dados:","Rode em um terminal o banco de dados:","Em outro terminal veja se os scripts de inicialização foram executados:","Deve ser mostrada a tabela com nome sometable:"]},{"l":"Limpando o container","p":["Para limpar totalmente o container, removendo todos os dados, schemas, etc., execute:"]}],[{"i":"dbdiagramio","l":"dbdiagram.io","p":["A dbdiagram.io é uma ferramenta simples e gratuita para desenhar diagramas de banco de dados ( ERDs ) digitando código DSL. O dbdiagram usa o popular DBML ( Database Markup Language ). A ferramenta dbdiagram é disponibilizada de forma online através do navegador web através deste link:","E em seguida clicar em \"Create your diagram\" no centro da página ou, clicar em \"Go to App\" no canto superior direito da página."]},{"l":"Criando uma conta","p":["Para criar uma conta no dbdiagram.io, é nescessário que esteja na parte de criação dos diagramas; no canto superior esquerdo, deve-se clicar em \"Sign in\" e optar em entrar com a sua conta do Google ou, GitHub ou próopria da ferramenta."]},{"i":"conta-no-dbdiagramio-através","l":"Conta no dbdiagram.io através","p":["É nescessário apenas de um endereço de e-mail para preencher o campo e clicar em \"Submit\"; após isso irá receber um código no endereço de e-mail preenchido; tendo inserido ocódigo, sera levado para uma tela para informar a sua função atual para utilização da ferramenta.","Através da conta Google ou GitHub, é nescessário apenas clicar em uma das opções que abrirá uma mini guia para efetuar o login nas devidas plataformas."]}],[{"l":"Docker","p":["O projeto utiliza o Docker para facilitar o desenvolvimento e a execução do projeto."]},{"l":"Instalação Ubuntu"},{"l":"Evitando conflitos","p":["Verfique estar usando um entre:","Ubuntu Lunar 23.04","Ubuntu Kinetic 22.10","Ubuntu Jammy 22.04 (LTS)","Ubuntu Focal 20.04 (LTS)","E desinstale pacotes não oficiais, caso os tenha:","docker.io","docker-compose","docker-doc","podman-docker","O Docker Engine depende do containerd e do runc, mas os junta em um pacote só. Se você tiver instalado o containerd ou o runc, desinstale-os."]},{"l":"Instalando","p":["Existem diferentes maneiras de instalar o Docker no Ubuntu. A mais simples é usar o apt.","Adicione o repositorio oficial do Docker:","Instale os pacotes necessários:","Verifique a instalação:","E o Docker também:","E o Docker deve rodar a imagem e mostrar uma mensagem de sucesso:"]},{"l":"Pós Instalação","p":["Se quiser rodar docker sem sudo, siga as instruções do site oficial.","Verifique se a sessão da documentação em primeira-entrega/postgresql funciona com o Docker."]}],[{"l":"Flask"},{"l":"Instalação do Flask"},{"l":"Instalar o Flask","p":["Você pode instalar o Flask usando o pip, que é o gerenciador de pacotes Python:","Isso instalará o Flask e suas dependências."]},{"l":"Verificar a instalação","p":["Para verificar se o Flask foi instalado com sucesso, você pode executar o seguinte comando:","Isso deve exibir a versão do Flask que foi instalada.","Isso conclui o tutorial básico de instalação do Flask no Ubuntu/wsl."]},{"l":"Rodando a API Flask"},{"l":"Executar o Aplicativo Flask","p":["Isso iniciará o servidor Flask.","Para parar o servidor, pressione Ctrl + C no terminal."]}],[{"l":"Motivação do uso dessas tecnologias","p":["Documentação que visa a explicar o porquê dos softwares utilizados terem sido escolhidos."]},{"l":"Svelte","p":["Ao pensar em um framework para ser utilizado no front-end, surgiu-nos a ideia de, ao invés do React (tecnologia que mais domina o mercado atualmente), usar o Svelte, haja vista sua proposta simplista, e a presença de integrantes do grupo inexperientes na área. Assim, tornar-se-ia mais fácil a contribuição de todos os membros da equipe."]},{"l":"Flask","p":["Ainda no intuito de tornar a configuração e o desenvolvimento tão simples quanto possível, optamos por usar o Flask como framework de desenvolvimento back-end. Nesse sentido, note que para instalá-lo bastar usar um simples comando no terminal, fator atrativo à nossa atenção."]},{"i":"dockerdocker-compose","l":"Docker/docker-compose","p":["O Docker havia sido utilizado por um colega da equipe em uma experiência profissional, o qual já possui experiência com o software e um acervo exemplo de sua utilização, de forma a facilitar nosso trabalho. Dessa forma, achamos por bem utilizá-lo."]},{"l":"PostgreSQL","p":["A motivação em usar o Postgres como SGBD foi a de que, por ser um software amplamente utilizado nos dias atuais, foi, basicamente, o único SGBD com o qual a maior parte do grupo já possuía alguma experiêcnia. Assim, na ideia de facilitar o processo de desenvolvimento, decidimos por usá-lo."]},{"l":"DBDiagram","p":["Como software de auxílio à modelagem do banco de dados optamos pelo DBDiagram. Essa escolha foi baseada na sugestão de um dos integrantes do grupo, o qual versou sobre a facilidade do uso dessa aplicação, além dela ser online, facilitando o desenvolvimento em equipe.","Caso necessário, podemos migrar para uma ferramenta CASE mais completa."]}],[{"l":"Svelte","p":["O framework que será utilizado para o frontend deste projeto será o Svelte, usando como linguagem base o Typescript (mais informações consulte a documentação: https://svelte.dev/docs/introduction)."]},{"l":"Instalação do Svelte"},{"l":"Instalar os Pré-Requisitos","p":["O framework necessita de um gerenciador de pacotes e do node.js para funcionar. O gerenciador utilizado neste trabalho é o npm. Para instalar ambos basta rodar no terminal:","Isso instalará o Node.js e suas dependências, em conjunto com o gerenciador npm.","Para verificar se foi instalado com sucesso, verique as versões de ambos no terminal:"]},{"l":"Iniciar um projeto em Svelte","p":["Esta etapa é necessária somente para a criação do projeto, não é preciso realizá-la caso já tenha um projeto Svelte aberto.","Para instalar o Svelte, vá para o diretório desejado para instalar o framework (neste projeto, o local destinato encontra-se no diretório chamado \"framework\").","Abra um terminal no mesmo diretório e execute o código:","Nas configurações iniciais, informadas no próprio terminal onde se iniciou o projeto, escolha as opções:","No resultado final, o diretório terá uma nova pasta chamada myapp."]},{"l":"Rodando o projeto em localhost","p":["No mesmo diretório onde foi iniciado o Svelte, execute no terminal:","Ao final da execução, surgirá um endereço local que, quando for acessado no navegador local, a aplicação será mostrada ao usuário."]}],[{"l":"Funcionalidades do sistema","p":["O sistema em questão é um software capaz de gerenciar o empréstimo de livros e materiais didáticos de um laboratório escolar. Para tal, o programa conta com diferentes perfis de uso (gerenciador do sistema, membro do laboratório e aluno, por exemplo), de tal forma que há um controle de acesso. Além disso, por meio do sistema é possível cadastrar novos livros e materiais; catalogá-los (inserir informações como ISBN - para livros -, número de série - para materiais -, categoria, título, etc); saber a localização física do item no laboratório; fazer empréstimos e devoluções (conforme correto perfil de acesso); e buscar por livros e materiais no catálogo."]},{"l":"Diagrama de fluxo"}],[{"l":"Manual do Usuário"},{"l":"Sistema de Gerenciamento de Biblioteca"},{"i":"1-introdução","l":"1. Introdução:","p":["Bem-vindo ao Sistema de Gerenciamento de Biblioteca! Este manual oferecerá orientações sobre como utilizar o sistema de forma eficiente e segura."]},{"i":"2-visão-geral-do-sistema","l":"2. Visão Geral do Sistema:","p":["O Sistema de Gerenciamento de Biblioteca foi desenvolvido para simplificar o controle de livros, materiais didáticos, usuários e empréstimos em uma biblioteca. Através deste sistema, os usuários e administradores podem realizar diversas tarefas, desde cadastrar novos itens até acompanhar o status de empréstimos."]},{"i":"3-requisitos-do-sistema","l":"3. Requisitos do Sistema:","p":["Para utilizar o sistema, certifique-se de que seu dispositivo atenda aos seguintes requisitos:","Navegador da web atualizado","Conexão com a Internet","Docker (Admin)","Python (Admin)"]},{"i":"4-registro-e-login","l":"4. Registro e Login:","p":["Registro: Se você é um novo usuário, entre em contato com um administrador para que seja criada uma conta para seu acesso.","Login: Após receber os dados de registro, faça login usando seu nome de usuário e senha na página de login; caso seja um administrador, insira as suas credenciais e finalize clicando no Botão “Entrar”."]},{"i":"5-navegação","l":"5. Navegação:","p":["Barra de Navegação: Utilize a barra de navegação na parte superior para acessar diferentes seções do sistema, como \"Meus Empréstimos\", “Inventario”, “Novo Item” (Admin), “Gerenciar Empréstimos” (Admin), \"Gerenciar Usuários\" (Admin/Chefe) além do “Menu” e do botão “Sair” para sair da conta."]},{"i":"6-funcionalidades-principais","l":"6. Funcionalidades Principais:","p":["Filtros: Na lateral direita da tela, pode-se escolher entre “Estudante”, “Chefe\" e “Administrador”.","Meus Empréstimos: Nesta página se pode verificar os empréstimos que efetuou e as datas de Devolução Prevista e do empréstimo.","Inventário: Pode-se selecionar algum item para efetuar a solicitação de empréstimo.","Ao selecionar algum material ou livro e verificar sua disponibilidade e informações como a data de aquisição do material ou livro.","Editar Livro: Essa página de acesso do administrador ou um chefe permite editar as informações de um livro desejado.","Novo Item: Nesta página o administrador pode adicionar um novo Material Didático ou um novo Livro para o sistema.","Gerenciamento de Empréstimos: Nesta página o administrador pode visualizar pedidos de empréstimos e suas situações de devolução.","Gerenciar Usuários: O administrador pode adicionar algum usuário, editar os dados de um usuário e visualizar os usuários já cadastrados.","Cadastrar novo Usuário: Nesta página o administrador pode cadastrar um novo usuário e definir sua função, inserindo o nome, sobrenome, o login e a senha e uma imagem para identificação.","Editar Usuário: O administrador tem a possibilidade de editar as informações dos usuários já existentes:","Perfil do Usuário: Nesta página o usuário pode visualizar sua foto inserida e informações de login e função."]},{"i":"7-gestão-de-dados","l":"7. Gestão de Dados:","p":["Entrada de Dados: O administrador pode adicionar um novo usuário, e pode ser efetuado através do login.","Edição e Exclusão: Edite ou exclua itens na seção correspondente."]},{"i":"8-segurança","l":"8. Segurança:","p":["Senhas e Autenticação: Mantenha sua senha segura.","Evite compartilhar suas credenciais cedidas pelo administrador; se a segurança de suas credenciais for comprometida, entre em contato com um administrador do sistema para solicitar a recuperação das credenciais."]},{"i":"9-conclusão","l":"9. Conclusão:","p":["Agradecemos por escolher nosso Sistema de Gerenciamento de Biblioteca. Esperamos que essa ferramenta torne sua experiência mais eficiente, organizada e segura."]}],[{"l":"Relatório de Implantação"},{"i":"objetivo","l":"Objetivo:","p":["O presente relatório tem por objetivo instruir o usuário acerca do passo a passo de implantação do sistema gerenciador de materiais para um laboratório didático, bem como seus requisitos de hardware e software."]},{"i":"requisitos","l":"Requisitos:","p":["Conexão com a internet (no momento de instalação de dependências)","Computador com sistema operacional Ubuntu (Lunar, Kinetic, Jammy ou Focal)"]},{"l":"Instalando dependências"},{"i":"docker","l":"Docker:","p":["O projeto por nós construído utiliza o Docker no intuito de facilitar a implantação do sistema e o seu desenvolvimento. Para fazer a instalação, inicialmente desinstale pacotes não oficiais, caso os tenha: docker.io; docker-compose; docker-doc; podman-docker. Se você estiver com containerd ou o runc, também desinstale. Para isso, rode o comando:","Partindo para a instalação, utilizaremos o apt. Adicione o repositório oficial do docker:","Instale os pacotes necessários:","Verifique a instalação:","E o docker deve rodar a imagem e mostrar uma mensagem de sucesso:"]},{"i":"flask","l":"Flask:","p":["Utilize o pip, gerenciador de pacotes Python, para instalar o Flask:","Para verificar se foi instalado com sucesso, rode:","Esse comando deve retornar a versão instalada. Se retornar uma mensagem de erro, possivelmente houve um problema com a instalação.","Para executar o aplicativo Flask (iniciar o servidor flask), rode o comando:","Para parar o servidor, aperte Ctrl + C."]},{"i":"node","l":"Node:","p":["Recomenda-se o uso do Node 21. Para instalá-lo, basta rodar:","Para verificar a instalação, rode:","Se retornar a versão node instalada, está tudo certo com a instalação. Instale também o gerenciador de pacotes node, o npm:"]},{"l":"Rodando o projeto"},{"l":"Banco de dados","p":["Abra um terminal e execute:","Para reiniciar o banco de dados do zero, limpe os volumes do docker, executando:"]},{"l":"Frontend","p":["Para rodar o frontend, primeiro instale os pacotes necessários:","E então rode o projeto:"]},{"l":"Backend","p":["Para rodar o Backend, instale os pacotes necessários:","E então rode o projeto:"]}],[{"l":"Segunda entrega"},{"l":"Grupo 08","p":["Participantes:","211038208 - Artur Padovesi","211026501 - Miguel Mendes","200026071 - Pedro Ximenes","211010388 - Samuel Carvalho","211068341 - Miguel Carvalho"]},{"l":"Objetivo","p":["Nesta segunda entrega, o objetivo é modelar o Banco de Dados do projeto, devento ter:","Diagramas de entidade-relacionamento (DERs) que representam a estrutura do banco de dados.","Diagrama do Modelo Lógico (Relacional), incluindo as tabelas, campos, chaves primárias e chaves estrangeiras."]}],[{"i":"diagrama-do-modelo-entidade-relacionamento-mer","l":"Diagrama do Modelo Entidade-Relacionamento (MER)","p":["O diagrama foi feito praticamente exatamente conforme as especificações.","Diferenças:","Foi colocado Data de Emprestimo como uma das chaves primárias da Entidade Emprestimos. Para isso, foram considerados que:","Um usuário pode pegar emprestado o mesmo livro em 2 datas diferentes. Portanto não basta que as chaves estrangeiras sejam usadas como PK's;","Um usuário não pode pegar um mesmo livro emprestado 2 vezes no mesmo dia;","Herança de Item para Livros e Materiais Didaticos. Isso se deve ao fato de que:","Livros e Materiais Didáticos possuem muitos atributos em comum;","ambos apresentam o relacionamento de empréstimos;"]}],[{"l":"Diagrama do Modelo Relacional"},{"l":"O diagrama","p":["https://dbdiagram.io/d/Trab-BD-63370a017b3d2034fff95595","A maneira que boa parte das coisas foram convertidas do MER para o Modelo Relacional é clara o suficiente, mas ainda existem alguns pontos a se falar.","Começando pelo ponto mais interessante:"]},{"l":"Considerações"},{"i":"como-implementar-uma-herança-em-sql","l":"Como implementar uma herança em SQL?","p":["Single Table Inheritance:","Criar uma única tabela com todas as propriedades de todas as entidades na relação de herança, e diferenciar qual a entidade da linha/ row com um atributo adicional;","Isso cria problemas, pois, por exemplo, não pode se definir o atributo ISBN como não nulo, já que Material Didatico, que tem ISBN nulo, ocuparia a mesma tabela que Livro. Existem outros problemas, como dificuldade de diferenciação dos atributos de cada \"filho\", etc.","Concrete Table Inheritance:","Fazer uma tabela para cada filho do relacionamento, colocando os atributos do parente em cada um dos filhos. Ou seja, a herança definida com Item, Livro e Material Didatico seria implementado usando uma tabela para Livro e uma para Material Didatico;","Isso cria problemas, pois, por exemplo, teríamos não uma, mas duas tabelas que possuem com lógica de negócio semelhantes(o que significa código duplicado), e a partir daí mais duas tabelas de Emprestimo diferentes, multiplicando o problema por 2. Manutenção e alteração das tabelas está mais suscetível a erro humano, pois coisas que estão muito próximas entre si na modelagem estão sendo implementados mais distantes. Busca pelos itens independente do tipo fica mais difícil, e necessitaria de UNION's.","Class Table Inheritance:","Fazer uma tabela com os atributos comuns entre os filhos (representando o pai). Então implementar cada filho como sua própria tabela, a qual tem chave primária que também funciona como chave estrangeira para seu pai;","Um problema conhecido dessa implementação é a dificuldade em encontrar os filhos a partir do pai. Geralmente é necessário procurar em tabela por tabela dos filhos. No entanto, utilizar o atributo type no pai é o suficiente para diferenciar em qual tabela procurar.","Finalmente, com todas essas considerações, e visto que não foram feitas todas as considerações possíveis, somente as pensadas mais relevantes para o problema, foi decidido que a melhor opção é usar Class Table Inheritance."]},{"l":"Outros Detalhes de Implementação","p":["Foram criados tipos Enum para os campos Emprestimos.status, Usuarios.funcao, Items.type, pois","Isso torna o banco de dados uma fonte de verdade mais abrangente, contendo segurança de tipos ao inserir valores nesses campos;","Sobre Emprestimos, além de usar (itemId, itemType, userId, dataDeEmprestimo) como PK, também será usado um index único para (status, )","O hash da senha é guardada como char(60), pois","A função de criptografia sempre gera um hash de mesmo tamanho;","Em específico, usar crypto do pgcrypto com o algoritmo bf gera output de tamanho 60;"]}]]